= cef

This is an implementation of the Common Event Formatting standard.

http://www.arcsight.com/solutions/solutions-cef/


Included is a library implementing a formatter/emitter and a client program
that can be called from a shell script or some other external source. The
library currently hardcodes the syslog format|priority if you choose to send
vi UDP to a receiver.

Most of the standard dictionary is implemented.
http://www.arcsight.com/collateral/CEFstandards.pdf

== Example API Usage


    # instantiate a sender object
    sender=CEF::UDPSender.new(
        :receiver=>"loghost.mycompany.com",
        :eventDefaults=>{
            :deviceProduct => "MySnazzyLogger",
            :deviceVendor  => "My Company"
        }
      )
    # instantiate an event
    event=CEF::Event.new(
    :sourceAddress      => "192.168.1.1",
    :destinationAddress => "192.168.1.2",
    :name               => "i think something happened"
    )

    # fire away!
    sender.emit(e)

== Example client usage

  cef_sender --receiver="myloghost.company.com"\
            --deviceProduct="MySnazzyLogger"   \
            --deviceVendor="My Company"        \
            --sourceAddress="192.168.1.1"      \
            --destinationAddress="192.168.1.2" \
            --name="i think something happened"

To see the supported event attributes:

  cef_sender --schema

== Contributing to cef
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Ryan Breed. See LICENSE.txt for
further details.

